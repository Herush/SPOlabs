name: github CICD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
    DOCKER_IMAGE: cherkashiki/spolabs

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: build
      run: cd ./src && make build
    - name: test
      run: cd ./src && make test
    - name: pre-package
      run: sudo apt install -y debhelper-compat build-essential
    - name: package
      run: dpkg-buildpackage -us -uc 
    - name: post-package
      run: mv ../*deb ./cicd/
    - name: Check DEB contents
      run: dpkg -c ./cicd/*.deb
    - name: Upload DEB package
      uses: actions/upload-artifact@v4
      with:
        name: deb-package
        path: ./cicd/*.deb

  deploy:
    runs-on: ubuntu-latest
    needs: build
    services:
      docker:
        image: docker:dind
        options: --privileged

    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: deb-package
          path: cicd/

      - name: Login to Docker Hub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest

      - name: Verify container
        run: |
          docker run --rm ${{ env.DOCKER_IMAGE }}:latest

  k8s-deploy:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - uses: actions/checkout@v4
      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
      - name: Deploy to Kubernetes
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        run: |
          mkdir -p ~/.kube
          echo "$KUBE_CONFIG" > ~/.kube/config
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml
          kubectl apply -f hpa.yaml
