name: github CICD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
    DOCKER_IMAGE: cherkashiki/spolabs

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: build
      run: cd ./src && make build
    - name: test
      run: cd ./src && make test
    - name: pre-package
      run: sudo apt install -y debhelper-compat build-essential
    - name: package
      run: dpkg-buildpackage -us -uc 
    - name: post-package
      run: mv ../*deb ./cicd/
    - name: Check DEB contents
      run: dpkg -c ./cicd/*.deb
    - name: Upload DEB package
      uses: actions/upload-artifact@v4
      with:
        name: deb-package
        path: ./cicd/*.deb

  deploy:
    runs-on: ubuntu-latest
    needs: build
    services:
      docker:
        image: docker:dind
        options: --privileged

    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: deb-package
          path: cicd/

      - name: Login to Docker Hub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest

      - name: Verify container
        run: |
          docker run --rm ${{ env.DOCKER_IMAGE }}:latest
      
      - name: Install Helm and kubectl
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      # - name: Configure Kubernetes Access
      #   uses: azure/k8s-set-context@v3
      #   with:
      #     kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Deploy with Helm
        run: |
          helm upgrade --install spolabs ./spolabs-chart \
            --set image.tag=${{ github.sha }}

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml

      - name: Verify deployment status
        run: |
          kubectl get pods -l app=my-app
          kubectl rollout status deployment/my-app --timeout=2m

  prometheus-setup:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Configure Kubernetes Access
        uses: azure/k8s-set-context@v3
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Add Prometheus repository
        run: helm repo add prometheus-community https://prometheus-community.github.io/helm-charts

      - name: Install Prometheus
        run: helm upgrade --install prometheus prometheus-community/prometheus
