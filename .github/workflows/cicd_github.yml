name: github CICD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
    DOCKER_IMAGE: cherkashiki/spolabs

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: build
      run: cd ./src && make build
    - name: test
      run: cd ./src && make test
    - name: pre-package
      run: sudo apt install -y debhelper-compat build-essential
    - name: package
      run: dpkg-buildpackage -us -uc 
    - name: post-package
      run: mv ../*deb ./cicd/
    - name: Check DEB contents
      run: dpkg -c ./cicd/*.deb
    - name: Upload DEB package
      uses: actions/upload-artifact@v4
      with:
        name: deb-package
        path: ./cicd/*.deb

  deploy:
    runs-on: ubuntu-latest
    needs: build
    services:
      docker:
        image: docker:dind
        options: --privileged

    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: deb-package
          path: cicd/

      - name: Login to Docker Hub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest

      - name: Verify container
        run: |
          docker run --rm ${{ env.DOCKER_IMAGE }}:latest

  k8s-deploy:
    runs-on: ubuntu-latest
    needs: deploy
    services:
      docker:
        image: docker:dind
        options: --privileged
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Minikube
      run: |
        curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        sudo install minikube-linux-amd64 /usr/local/bin/minikube

    - name: Start Minikube with Docker driver
      run: |
        minikube start --driver=docker --cpus=4 --memory=8192
        minikube status

    - name: Configure kubectl
      run: |
        minikube kubectl -- get pods -A
        echo "$(minikube kubectl -- config view --flatten)" > ~/.kube/config

    - name: Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

    - name: Add Prometheus repo
      run: |
        helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
        helm repo update

    - name: Install Prometheus
      run: |
        helm install prometheus prometheus-community/prometheus

    - name: Add Grafana repo
      run: |
        helm repo add grafana https://grafana.github.io/helm-charts
        helm repo update

    - name: Install Grafana
      run: |
        helm install grafana grafana/grafana

    - name: Wait for Grafana to be ready
      run: |
        kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=grafana --timeout=300s

    - name: Check Grafana logs
      run: |
        kubectl logs -l app.kubernetes.io/name=grafana

    - name: Deploy to Minikube
      run: |
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
        kubectl apply -f k8s/hpa.yaml

    - name: Verify deployment
      run: |
        kubectl get pods
        kubectl get services

    - name: Expose Grafana service
      run: |
        kubectl expose service grafana --type=NodePort --port=3000 --name=grafana-external
        minikube service grafana-external --url
